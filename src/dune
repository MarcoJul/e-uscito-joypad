(executable
 (name e_uscito_joypad)
 (public_name e_uscito_joypad)
 (modules e_uscito_joypad views joypad_monitor middlewares static_filesystem sitemap)
 (preprocess
  (pps lwt_ppx tyxml-ppx ppx_deriving_yojson ppx_rapper))
 (libraries
  dream
  db
  rest
  settings
  batteries
  malloc
  timedesc
  cohttp-lwt-unix
  lambdasoup
  re2
  tyxml
  ppx_deriving_yojson.runtime
  caqti-driver-postgresql
  caqti-lwt))

(library
 (name settings)
 (modules settings)
 (libraries utils))

(library
 (name utils)
 (modules utils)
 (preprocess
  (pps lwt_ppx tyxml-ppx ppx_deriving_yojson))
 (libraries dream batteries malloc timedesc re2))

(rule
 (target static_filesystem.ml)
 (deps
  (glob_files_rec %{project_root}/frontend/build/*)
  (file %{project_root}/euscitojoypad_db/prerendered_index.html))
 (action
  (progn
   (bash "rm -Rf %{project_root}/static_filesystem && mkdir %{project_root}/static_filesystem")
   (bash "mkdir %{project_root}/static_filesystem/assets")
   (bash "mkdir %{project_root}/static_filesystem/static")

   (bash "cp -a %{project_root}/frontend/build/apple-touch-icon.png %{project_root}/static_filesystem/static")
   (bash "cp -a %{project_root}/frontend/build/assets/* %{project_root}/static_filesystem/assets")
   (bash "cp -a %{project_root}/frontend/build/e-uscito-joypad.css %{project_root}/static_filesystem/")
   (bash "cp -a %{project_root}/frontend/build/favicon-16x16.png %{project_root}/static_filesystem/")
   (bash "cp -a %{project_root}/frontend/build/favicon-32x32.png %{project_root}/static_filesystem/")
   (bash "cp -a %{project_root}/frontend/build/favicon.ico %{project_root}/static_filesystem/")
   (bash "cp -a %{project_root}/frontend/build/index.html %{project_root}/static_filesystem/")
   (bash "cp -a %{project_root}/frontend/build/joypad-img.jpg %{project_root}/static_filesystem/")
   (bash "cp -a %{project_root}/frontend/build/joypad-img.jpg %{project_root}/static_filesystem/static/")

   (bash "cp %{project_root}/euscitojoypad_db/prerendered_index.html %{project_root}/static_filesystem/")
   (with-stdout-to %{target} (run ocaml-crunch -m plain %{project_root}/static_filesystem))
  )
 )
)
